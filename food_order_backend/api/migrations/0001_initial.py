# Generated by Kavia Code Generation Agent
from django.db import migrations, models
import django.db.models.deletion
import django.core.validators
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=120)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid phone number format', regex='^[0-9+\\-() ]+$')])),
                ('default_address', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('position', models.PositiveIntegerField(default=0, help_text='Order for display in menus')),
            ],
            options={
                'ordering': ['position', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('description', models.TextField(blank=True)),
                ('price_cents', models.PositiveIntegerField(help_text='Price stored in cents to avoid floating point errors', validators=[django.core.validators.MinValueValidator(0)])),
                ('image_url', models.URLField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='api.category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('order_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready for pickup/delivery'), ('OUT_FOR_DELIVERY', 'Out for delivery'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], db_index=True, default='PENDING', max_length=20)),
                ('special_instructions', models.TextField(blank=True)),
                ('subtotal_cents', models.PositiveIntegerField(default=0)),
                ('tax_cents', models.PositiveIntegerField(default=0)),
                ('delivery_fee_cents', models.PositiveIntegerField(default=0)),
                ('total_cents', models.PositiveIntegerField(default=0)),
                ('eta', models.DateTimeField(blank=True, null=True, help_text='Estimated time of completion')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='api.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('unit_price_cents', models.PositiveIntegerField(help_text='Captured at time of order to preserve historical pricing', validators=[django.core.validators.MinValueValidator(0)])),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='api.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('method', models.CharField(choices=[('CARD', 'Credit/Debit Card'), ('CASH', 'Cash'), ('WALLET', 'Wallet/UPI')], default='CARD', max_length=20)),
                ('amount_cents', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('status', models.CharField(choices=[('INITIATED', 'Initiated'), ('AUTHORIZED', 'Authorized'), ('CAPTURED', 'Captured'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], db_index=True, default='INITIATED', max_length=20)),
                ('processor_ref', models.CharField(blank=True, help_text='Reference from payment processor, if any', max_length=100)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatusEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('from_status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready for pickup/delivery'), ('OUT_FOR_DELIVERY', 'Out for delivery'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('to_status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready for pickup/delivery'), ('OUT_FOR_DELIVERY', 'Out for delivery'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('at', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='api.order')),
            ],
            options={
                'ordering': ['-at'],
            },
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['is_available', 'category'], name='api_menuite_is_avail_b69ecd_idx'),
        ),
        migrations.AddConstraint(
            model_name='menuitem',
            constraint=models.UniqueConstraint(fields=('category', 'name'), name='unique_menuitem_category_name'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='api_order_status_0d9a12_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='api_order_created_66e0f5_idx'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'menu_item'), name='unique_orderitem_order_menuitem'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order'], name='api_orderit_order_id_927e3b_idx'),
        ),
        migrations.AddIndex(
            model_name='orderstatusevent',
            index=models.Index(fields=['order', 'at'], name='api_orderst_order_id_1d89bb_idx'),
        ),
    ]
